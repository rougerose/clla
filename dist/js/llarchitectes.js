let e=!1;if("undefined"!=typeof window){const t={get passive(){e=!0}};window.addEventListener("testPassive",null,t),window.removeEventListener("testPassive",null,t)}const t="undefined"!=typeof window&&window.navigator&&window.navigator.platform&&(/iP(ad|hone|od)/.test(window.navigator.platform)||"MacIntel"===window.navigator.platform&&window.navigator.maxTouchPoints>1);let n,o,s,i,r=[],l=new Map,a=!1,d=-1;const u=e=>r.some((t=>!(!t.options.allowTouchMove||!t.options.allowTouchMove(e)))),c=e=>{const t=e||window.event;return!!u(t.target)||t.touches.length>1||(t.preventDefault&&t.preventDefault(),!1)};class h extends HTMLElement{constructor(){super();const e=this;this.state=new Proxy({status:"open",enabled:!1},{set(t,n,o){const s=t[n];return t[n]=o,s!==o&&e.processStateChange(),t}})}get maxWidth(){return parseInt(this.getAttribute("max-width")||9999,10)}connectedCallback(){this.initialMarkup=this.innerHTML,this.render(),new ResizeObserver((e=>{const{contentRect:t}=e[0];this.state.enabled=t.width<=this.maxWidth,this.root.style.setProperty("--panel-top",Math.ceil(this.parentNode.parentNode.offsetHeight)+"px")})).observe(this.parentNode)}render(){this.innerHTML=`\n      <div class="burger-menu" data-element="burger-root">\n        <button class="burger-menu__trigger" data-element="burger-menu-trigger" type="button" aria-label="Ouvrir le menu">\n          <span class="burger-menu__bar" aria-hidden="true"></span>\n        </button>\n        <div class="burger-menu__panel" data-element="burger-menu-panel">\n          ${this.initialMarkup}\n        </div>\n      </div>\n    `,this.postRender()}postRender(){if(this.trigger=this.querySelector('[data-element="burger-menu-trigger"]'),this.panel=this.querySelector('[data-element="burger-menu-panel"]'),this.root=this.querySelector('[data-element="burger-root"]'),this.focusableElements=this?this.querySelectorAll('button:not([disabled]), [href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), [tabindex]:not([tabindex="-1"]):not([disabled]), details:not([disabled]), summary:not(:disabled)'):(console.warn("You need to pass a parent HTMLElement"),[]),this.trigger&&this.panel)return this.toggle(),this.trigger.addEventListener("click",(e=>{e.preventDefault(),this.toggle()})),void document.addEventListener("focusin",(()=>{this.contains(document.activeElement)||this.toggle("closed")}));this.innerHTML=this.initialMarkup}toggle(e){if(e){if(this.state.status===e)return;this.state.status=e}else this.state.status="closed"===this.state.status?"open":"closed"}processStateChange(){switch(this.root.setAttribute("status",this.state.status),this.root.setAttribute("enabled",this.state.enabled?"true":"false"),this.manageFocus(),this.state.status){case"closed":this.trigger.setAttribute("aria-expanded","false"),this.trigger.setAttribute("aria-label","Open menu"),(h=this)?(l.set(h,(null==l?void 0:l.get(h))?(null==l?void 0:l.get(h))-1:0),0===(null==l?void 0:l.get(h))&&(r=r.filter((e=>e.targetElement!==h)),null==l||l.delete(h)),t&&(h.ontouchstart=null,h.ontouchmove=null,a&&0===r.length&&(document.removeEventListener("touchmove",c,e?{passive:!1}:void 0),a=!1)),0===r.length&&(t?(()=>{if(void 0!==s){const e=-parseInt(document.body.style.top,10),t=-parseInt(document.body.style.left,10),n=document.documentElement,i=document.body;n.style.height=(null==o?void 0:o.height)||"",n.style.overflow=(null==o?void 0:o.overflow)||"",i.style.position=s.position||"",i.style.top=s.top||"",i.style.left=s.left||"",i.style.width=s.width||"",i.style.height=s.height||"",i.style.overflow=s.overflow||"",window.scrollTo(t,e),s=void 0}})():(void 0!==i&&(document.body.style.paddingRight=i,i=void 0),void 0!==n&&(document.body.style.overflow=n,n=void 0)))):console.error("enableBodyScroll unsuccessful - targetElement must be provided when calling enableBodyScroll on IOS devices.");break;case"open":case"initial":this.trigger.setAttribute("aria-expanded","true"),this.trigger.setAttribute("aria-label","Close menu"),((h,g)=>{if(!h)return void console.error("disableBodyScroll unsuccessful - targetElement must be provided when calling disableBodyScroll on IOS devices.");if(l.set(h,(null==l?void 0:l.get(h))?(null==l?void 0:l.get(h))+1:1),r.some((e=>e.targetElement===h)))return;const m={targetElement:h,options:{}};r=[...r,m],t?window.requestAnimationFrame((()=>{const e=document.documentElement,t=document.body;if(void 0===s){o={...e.style},s={...t.style};const{scrollY:n,scrollX:i,innerHeight:r}=window;e.style.height="100%",e.style.overflow="hidden",t.style.position="fixed",t.style.top=-n+"px",t.style.left=-i+"px",t.style.width="100%",t.style.height="auto",t.style.overflow="hidden",setTimeout((()=>window.requestAnimationFrame((()=>{const e=r-window.innerHeight;e&&n>=r&&(t.style.top=-(n+e)+"px")}))),300)}})):(e=>{if(void 0===i){const e=!1,t=window.innerWidth-document.documentElement.clientWidth;if(e&&t>0){const e=parseInt(window.getComputedStyle(document.body).getPropertyValue("padding-right"),10);i=document.body.style.paddingRight,document.body.style.paddingRight=`${e+t}px`}}void 0===n&&(n=document.body.style.overflow,document.body.style.overflow="hidden")})(),t&&(h.ontouchstart=e=>{1===e.targetTouches.length&&(d=e.targetTouches[0].clientY)},h.ontouchmove=e=>{1===e.targetTouches.length&&((e,t)=>{const n=e.targetTouches[0].clientY-d;!u(e.target)&&(t&&0===t.scrollTop&&n>0||(e=>!!e&&e.scrollHeight-e.scrollTop<=e.clientHeight)(t)&&n<0?c(e):e.stopPropagation())})(e,h)},a||(document.addEventListener("touchmove",c,e?{passive:!1}:void 0),a=!0))})(this)}var h}manageFocus(){if(this.state.enabled)switch(this.state.status){case"open":this.focusableElements.forEach((e=>e.removeAttribute("tabindex")));break;case"closed":[...this.focusableElements].filter((e=>"burger-menu-trigger"!==e.getAttribute("data-element"))).forEach((e=>e.setAttribute("tabindex","-1")))}else this.focusableElements.forEach((e=>e.removeAttribute("tabindex")))}}"customElements"in window&&customElements.define("burger-menu",h);const g=document.querySelector(".back-to-top");new IntersectionObserver(((e,t)=>{e.forEach((e=>{e.target.classList.toggle("is-intersecting",e.isIntersecting)}))}),{}).observe(g);
